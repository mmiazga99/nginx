user www-data;
worker_processes auto;
worker_rlimit_nofile 2048; # it is double of worker_connections
include /etc/nginx/modules-enabled/*.conf;


events {
	worker_connections 1024;
	multi_accept off; # you need to test it. Sometimes it's better for perfmance to have this on
}

http {

	upstream php {
        	server unix:/run/php/php-fpm.sock;
        	server 127.0.0.1:9000;
	}

	## Includes
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/mime.types;


	## Rate Limiting
	limit_req_zone $binary_remote_addr zone=limit_by_address:10m rate=60r/m;

	
	## Logging
	access_log off; # You might consider using this one, really depends on how much traffic is going through
	error_log /var/log/nginx/error.log warn;
	log_format compression '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$gzip_ratio"';

	## Hashes
	server_names_hash_bucket_size 64;


	## Buffering	# they highly depend on CPU and RAM
	client_body_buffer_size 16k;
	client_max_body_size 9m;
	client_header_buffer_size 1k;
	large_client_header_buffers 2 1k;
	
	
	## Timeouts
	client_body_timeout 12;
	client_header_timeout 12;
	keepalive_timeout 15;
	send_timeout 10;


server {
	
	## Base
	listen 443 ssl http2;
        server_name #######.com;
        root /var/www/html;
        index index.php;
	
	
	## Performance
	gzip on; 
	gzip_vary on;
	gzip_min_length 1024;
	gzip_proxied expired no-cache no-store private auth;
	gzip_comp_level 4;
	gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml; 
	

	## SSL
	ssl_certificate /etc/letsencrypt/live/#######.com/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/#######.com/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	ssl_stapling on;
	ssl_stapling_verify on;
	# Rest of config in /etc/letsencrypt/options-ssl-nginx.conf

    
	## Security
	server_tokens off;
	autoindex off;
	add_header X-Frame-Options “SAMEORIGIN”;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Content-Type-Options nosniff;	
	add_header Referrer-Policy "strict-origin";
	add_header Strict-Transport-Security "max-age=31536000" always;
	fastcgi_hide_header X-Powered-By;
	proxy_hide_header X-Powered-By;


#	location = /favicon.ico {
#                log_not_found off;
#                access_log off;
#        }

#        location = /robots.txt {
#                allow all;
#                log_not_found off;
#                access_log off;
#        }

        location / {
                try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
                include fastcgi_params;
                fastcgi_intercept_errors on;
                fastcgi_pass php;
                fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
		
		limit_req zone=limit_by_address burst=5 nodelay;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
        }

	location = /wp-login.php {
		auth_basic "Secure Area";
		auth_basic_user_file /var/www/html/.htpasswd;
		
		include fastcgi_params;
		fastcgi_intercept_errors on;
		fastcgi_pass php;
		fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
		limit_req zone=limit_by_address burst=5 nodelay;
		access_log /var/log/nginx/access.log;
	}

	location ~ \.user\.ini$ {
		deny all;
	}
	
	location = /wp-config.php$ {
		deny all;
	}

}	


	## Redirecting :80 traffic
	server {
		if ($host = *#######.com) {
			return 301 https://$host$request_uri;
		} 
		listen 80;
        	server_name #######.com;	
	}
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
